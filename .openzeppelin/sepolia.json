{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0e060d7ec50fC55A0C7BCd383b80F7806Cf1ecFb",
      "txHash": "0x8aef955b5389dcc15ef64b380c3e4eb0898559af0b7b5bf6ba8db9eef3e9ee2f",
      "kind": "transparent"
    },
    {
      "address": "0x07c87Bb4a55d0f8e4C3Ad344023f4bd3a0E6AA5b",
      "txHash": "0xbfc87fba9f6cd88087bf45b6684e693035f689539988ad1cce11a26459df1249",
      "kind": "transparent"
    },
    {
      "address": "0xA4ea74A4880cF488D2361cbB6f065d2030F0bB7E",
      "txHash": "0x4d9959f683d4fbcb9d25e37e8e61834fe7ce1b2f5bcf9f9a59899ef25fc554ec",
      "kind": "transparent"
    },
    {
      "address": "0x2321362De9777fA03591b3eBDa28E589C1d8cb29",
      "txHash": "0x95b81b8aca746fc592f806b0e5527d96d1a7eda49d6f77a105b4935dd1433de1",
      "kind": "transparent"
    },
    {
      "address": "0x4c6ADD5Ed63564C148934FD87Baee6B961982DdE",
      "txHash": "0xb453f0cd9adf0ddc7f216116bac4db420d4f589f0a9d50ad7c121ed274c1c964",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3e590e31266a171848c4c677e8aec276727565c7eb71b168e28828e1cfe27018": {
      "address": "0x7E73AD8315458F261665b7aED1424CA66EF0128C",
      "txHash": "0x42cdf6dbc343f57d2adf2e58b9b49a0136032b1e0615d364b89a5f5abf24586f",
      "layout": {
        "solcVersion": "0.8.3",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:52"
          },
          {
            "label": "_mintTreshold",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:53"
          },
          {
            "label": "_redeemCreditBalance",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:54"
          },
          {
            "label": "_nonredeemCreditBalance",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:55"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:56"
          },
          {
            "label": "treasuryManagerAddress",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:57"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:58"
          },
          {
            "label": "totalLockedSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:59"
          },
          {
            "label": "_redeemCreditBalancesUpdated",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_address,t_struct(TokenCredit)2103_storage)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:62"
          },
          {
            "label": "_nonredeemCreditBalancesUpdated",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_struct(TokenCredit)2103_storage)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:63"
          },
          {
            "label": "_creditBalances",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:64"
          },
          {
            "label": "isUpgraded",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenCredit)2103_storage)": {
            "label": "mapping(address => struct Dryp.TokenCredit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TokenCredit)2103_storage": {
            "label": "struct Dryp.TokenCredit",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epocTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f87b4853a1ae7909e57046f702ce47851144d57ed37336b5be257f79ff9532f6": {
      "address": "0x02f7d12af633B53F413311811fE1E7d69CF713Ac",
      "txHash": "0x8b6d6eb40910c6e9a2936b7fa6ef02e7e6733751ce183db656593718443b9bde",
      "layout": {
        "solcVersion": "0.8.3",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1757_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:56"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_usdt",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:98"
          },
          {
            "label": "_usdc",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:99"
          },
          {
            "label": "treasury_manager",
            "offset": 0,
            "slot": "54",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:101"
          },
          {
            "label": "redeemBasketAssets",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_struct(TreasuryAsset)6801_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:103"
          },
          {
            "label": "unredeemBasketAssets",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_struct(TreasuryAsset)6801_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:106"
          },
          {
            "label": "mintTokens",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_address,t_struct(ExchangeToken)6792_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:109"
          },
          {
            "label": "revenue",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:112"
          },
          {
            "label": "allAssets",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:114"
          },
          {
            "label": "treasuryStarted",
            "offset": 0,
            "slot": "60",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:116"
          },
          {
            "label": "rebalancing",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_struct(Rebalancer)6847_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:127"
          },
          {
            "label": "allRebalancingChanges",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:130"
          },
          {
            "label": "rebasePaused",
            "offset": 0,
            "slot": "63",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:133"
          },
          {
            "label": "capitalPaused",
            "offset": 1,
            "slot": "63",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:137"
          },
          {
            "label": "redeemBuffer",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:140"
          },
          {
            "label": "noredeemBuffer",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:143"
          },
          {
            "label": "_dryp",
            "offset": 0,
            "slot": "66",
            "type": "t_contract(Dryp)7428",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:146"
          },
          {
            "label": "_drypPool",
            "offset": 0,
            "slot": "67",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:149"
          },
          {
            "label": "_rebalancer",
            "offset": 0,
            "slot": "68",
            "type": "t_struct(Rebalancer)6847_storage",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:152"
          },
          {
            "label": "_totalValue",
            "offset": 0,
            "slot": "72",
            "type": "t_uint256",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:157"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Dryp)7428": {
            "label": "contract Dryp",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ExchangeToken)6792_storage)": {
            "label": "mapping(address => struct TreasuryStorage.ExchangeToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Rebalancer)6847_storage)": {
            "label": "mapping(address => struct TreasuryStorage.Rebalancer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TreasuryAsset)6801_storage)": {
            "label": "mapping(address => struct TreasuryStorage.TreasuryAsset)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1757_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ExchangeToken)6792_storage": {
            "label": "struct TreasuryStorage.ExchangeToken",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allowed",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "megaPool",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "maxAllowed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceInUsdt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Rebalancer)6847_storage": {
            "label": "struct TreasuryStorage.Rebalancer",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_deprecated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_redeemBasketPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_unredeemBasketPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)1757_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TreasuryAsset)6801_storage": {
            "label": "struct TreasuryStorage.TreasuryAsset",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "allotatedPercentange",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "priceInUsdt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cf1e470d7eacd4b0949ebcb8a7fba6fdc82d519c48f43cc55c575332af52e8d1": {
      "address": "0xB505af3cDf20d6736600403E161FA242b606D7AB",
      "txHash": "0x3e307411d8ba1488ccdd08117713ef370b5b05acbbeb066800575fc06d122a76",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:52"
          },
          {
            "label": "_mintTreshold",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:53"
          },
          {
            "label": "_redeemCreditBalance",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:54"
          },
          {
            "label": "_nonredeemCreditBalance",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:55"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:56"
          },
          {
            "label": "treasuryManagerAddress",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:57"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:58"
          },
          {
            "label": "totalLockedSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:59"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "359",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:61"
          },
          {
            "label": "_redeemCreditBalancesUpdated",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_struct(TokenCredit)7626_storage)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:62"
          },
          {
            "label": "_nonredeemCreditBalancesUpdated",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_struct(TokenCredit)7626_storage)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:63"
          },
          {
            "label": "_creditBalances",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:64"
          },
          {
            "label": "isUpgraded",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Dryp",
            "src": "contracts/treasuryToken/Dryp.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenCredit)7626_storage)": {
            "label": "mapping(address => struct Dryp.TokenCredit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TokenCredit)7626_storage": {
            "label": "struct Dryp.TokenCredit",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epocTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "361deecad34ff371e63134d1b04bfdf26fedb0bd1392cc649353f3a466842856": {
      "address": "0xE3Cb392e4b2b4fE9953E1c1DeD8Dfd3Ba5733e38",
      "txHash": "0x05ddda90647196c91d058b4297854c3e200592cc4b060710fdf16defe5425e57",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1757_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:56"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_drypPoolPositionManager",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(IPancakeswapV2PositionManager)7490",
            "contract": "PancakeswapHelpers",
            "src": "contracts/assetTreasury/Pool.sol:7"
          },
          {
            "label": "_usdt",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:66"
          },
          {
            "label": "_treasury_manager",
            "offset": 0,
            "slot": "54",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:67"
          },
          {
            "label": "_redeemBasketAssets",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_struct(TreasuryAsset)7146_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:70"
          },
          {
            "label": "_unredeemBasketAssets",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_struct(TreasuryAsset)7146_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:73"
          },
          {
            "label": "_mintTokens",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_address,t_struct(ExchangeToken)7135_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:76"
          },
          {
            "label": "_allAssets",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:78"
          },
          {
            "label": "_mintingAssets",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:80"
          },
          {
            "label": "_treasuryStarted",
            "offset": 0,
            "slot": "60",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:81"
          },
          {
            "label": "rebasePaused",
            "offset": 1,
            "slot": "60",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:91"
          },
          {
            "label": "capitalPaused",
            "offset": 2,
            "slot": "60",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:94"
          },
          {
            "label": "_dryp",
            "offset": 3,
            "slot": "60",
            "type": "t_contract(Dryp)8181",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Dryp)8181": {
            "label": "contract Dryp",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeswapV2PositionManager)7490": {
            "label": "contract IPancakeswapV2PositionManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ExchangeToken)7135_storage)": {
            "label": "mapping(address => struct TreasuryStorage.ExchangeToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TreasuryAsset)7146_storage)": {
            "label": "mapping(address => struct TreasuryStorage.TreasuryAsset)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1757_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ExchangeToken)7135_storage": {
            "label": "struct TreasuryStorage.ExchangeToken",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allowed",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "megaPool",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "maxAllowed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceInUsdt",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)1757_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TreasuryAsset)7146_storage": {
            "label": "struct TreasuryStorage.TreasuryAsset",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "allotatedPercentange",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "priceInUsdt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a89306d04b89babc6522b6e4097e3fc6223e9470f9887d4a9b0f8bf7d3da5513": {
      "address": "0xA00d87AbfeAD0444583e7cddBe15608eDc792BD0",
      "txHash": "0x9a43508ca993f5bef5fdd39aca8ae0822a02799b36903df7e28e77342532715a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1757_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:56"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_drypPoolPositionManager",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(IPancakeswapV2PositionManager)7365",
            "contract": "PancakeswapHelpers",
            "src": "contracts/assetTreasury/Pool.sol:7"
          },
          {
            "label": "_usdt",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:66"
          },
          {
            "label": "_treasury_manager",
            "offset": 0,
            "slot": "54",
            "type": "t_address",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:67"
          },
          {
            "label": "_redeemBasketAssets",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_struct(TreasuryAsset)7200_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:70"
          },
          {
            "label": "_unredeemBasketAssets",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_struct(TreasuryAsset)7200_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:73"
          },
          {
            "label": "_mintTokens",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_address,t_struct(ExchangeToken)7189_storage)",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:76"
          },
          {
            "label": "_allAssets",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:78"
          },
          {
            "label": "_mintingAssets",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:80"
          },
          {
            "label": "_treasuryStarted",
            "offset": 0,
            "slot": "60",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:81"
          },
          {
            "label": "rebasePaused",
            "offset": 1,
            "slot": "60",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:91"
          },
          {
            "label": "capitalPaused",
            "offset": 2,
            "slot": "60",
            "type": "t_bool",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:94"
          },
          {
            "label": "_dryp",
            "offset": 3,
            "slot": "60",
            "type": "t_contract(Dryp)7974",
            "contract": "TreasuryStorage",
            "src": "contracts/assetTreasury/TreasuryStorage.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Dryp)7974": {
            "label": "contract Dryp",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeswapV2PositionManager)7365": {
            "label": "contract IPancakeswapV2PositionManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ExchangeToken)7189_storage)": {
            "label": "mapping(address => struct TreasuryStorage.ExchangeToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TreasuryAsset)7200_storage)": {
            "label": "mapping(address => struct TreasuryStorage.TreasuryAsset)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1757_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ExchangeToken)7189_storage": {
            "label": "struct TreasuryStorage.ExchangeToken",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allowed",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "megaPool",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "maxAllowed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceInUsdt",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)1757_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TreasuryAsset)7200_storage": {
            "label": "struct TreasuryStorage.TreasuryAsset",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "allotatedPercentange",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "priceInUsdt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
